record(bo, "$(P)$(R)RTDE:Disconnect")
{
    field(DESC, "Disconnects from the RTDE interface")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))DISCONNECT")
}

record(bo, "$(P)$(R)RTDE:Reconnect")
{
    field(DESC, "Tries reconnecting to the RTDE interface")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))RECONNECT")
}

record(bi, "$(P)$(R)RTDE:Connected")
{
    field(DESC, "RTDE Connection status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))IS_CONNECTED")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:ControllerTimestamp")
{
    field(DESC, "Time since controller started")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROLLER_TIMESTAMP")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:SafetyStatusBits")
{
    field(DESC, "Safety status bits")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))SAFETY_STATUS_BITS")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:DigitalInputBits")
{
    field(DESC, "Digital input bits (18bits)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))DIGITAL_INPUT_BITS")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:DigitalOutputBits")
{
    field(DESC, "Digital output bits (18bits)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))DIGITAL_OUTPUT_BITS")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:RuntimeState")
{
    field(DESC, "Runtime state")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))RUNTIME_STATE")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:RobotMode")
{
    field(DESC, "Robot mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ROBOT_MODE")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:SafetyMode")
{
    field(DESC, "Safety mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))SAFETY_MODE")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:AnalogInput0")
{
    field(DESC, "Standard A0 input")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))STD_ANALOG_INPUT0")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:AnalogInput1")
{
    field(DESC, "Standard A1 input")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))STD_ANALOG_INPUT1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:AnalogOutput0")
{
    field(DESC, "Standard A0 output")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))STD_ANALOG_OUTPUT0")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:AnalogOutput1")
{
    field(DESC, "Standard A1 output")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))STD_ANALOG_OUTPUT1")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualJointPositions")
{
    field(DESC, "Actual joint positions")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_JOINT_POSITIONS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualJointVelocities")
{
    field(DESC, "Actual joint velocities")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_JOINT_VELOCITIES")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualJointCurrents")
{
    field(DESC, "Actual joint currents")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_JOINT_CURRENTS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:JointControlCurrents")
{
    field(DESC, "Joint control currents")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))JOINT_CONTROL_CURRENTS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualTCPPose")
{
    field(DESC, "Actual TCP pose (x,y,z,r,p,y)")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_TCP_POSE")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualTCPSpeed")
{
    field(DESC, "Actual TCP speed")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_TCP_SPEED")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualTCPForce")
{
    field(DESC, "Actual TCP force")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_TCP_FORCE")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:JointModes")
{
    field(DESC, "Joint control modes")
    field(DTYP, "asynInt32ArrayIn")
    field(FTVL, "LONG")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))JOINT_MODES")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualToolAccelerometer")
{
    field(DESC, "Tool accelerometer (X,Y,Z)")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_TOOL_ACCEL")
    field(NELM, 3)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetJointPositions")
{
    field(DESC, "Target joint positions")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_JOINT_POSITIONS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetJointVelocities")
{
    field(DESC, "Target joint speeds")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_JOINT_VELOCITIES")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetJointAccelerations")
{
    field(DESC, "Target joint accelerations")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_JOINT_ACCELERATIONS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetJointCurrents")
{
    field(DESC, "Target joint currents")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_JOINT_CURRENTS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetJointMoments")
{
    field(DESC, "Target joint currents")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_JOINT_CURRENTS")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetTCPPose")
{
    field(DESC, "Target TCP pose (x,y,z,r,p,y)")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_TCP_POSE")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:TargetTCPSpeed")
{
    field(DESC, "Target TCP speed")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_TCP_SPEED")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:JointTemperatures")
{
    field(DESC, "Joint temperatures in celsius")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))JOINT_TEMPERATURES")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:SpeedScaling")
{
    field(DESC, "Speed scaling")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))SPEED_SCALING")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:TargetSpeedFraction")
{
    field(DESC, "Target speed fraction")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))TARGET_SPEED_FRACTION")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:ActualMomentum")
{
    field(DESC, "Norm of Cartesian linear momentum")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_MOMENTUM")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:ActualMainVoltage")
{
    field(DESC, "Safety control board main voltage")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_MAIN_VOLTAGE")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:ActualRobotVoltage")
{
    field(DESC, "Safety control board robot voltage")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_ROBOT_VOLTAGE")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)RTDE:ActualRobotCurrent")
{
    field(DESC, "Safety control board robot current")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_ROBOT_CURRENT")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)RTDE:ActualJointVoltages")
{
    field(DESC, "Actual joint voltages")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ACTUAL_JOINT_VOLTAGES")
    field(NELM, 6)
    field(SCAN, "I/O Intr")
}
