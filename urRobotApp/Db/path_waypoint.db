# Type of K'th waypoint in path N
record(mbbo, "$(P)Path$(N):$(K):Type") {
    field(DESC, "Type of waypoint for waypoint in path")
    field(ZRST,"Linear") # Cartesian waypoint (WaypointL)
    field(ONST,"Joint") # Joint waypoint (WaypointJ)
    field(VAL, "$(TYPE=0)")
    field(FLNK, "$(P)Path$(N):$(K):get_wp_info.PROC")
}

# Waypoint number of K'th waypoint in path N
record(longout, "$(P)Path$(N):$(K):Number") {
    field(DESC, "Waypoint number for waypoint in path")
    field(VAL, "$(WP_NUM=0)")
    field(FLNK, "$(P)Path$(N):$(K):get_wp_info.PROC")
}

# Action override of K'th waypoint in path N
record(mbbo, "$(P)Path$(N):$(K):ActionOverride") {
    field(DESC, "Action override for waypoint in path")
    field(ZRST, "None")
    field(ONST, "1")
    field(TWST, "2")
    field(THST, "3")
    field(FRST, "4")
    field(FVST, "5")
    field(SXST, "6")
    field(SVST, "7")
    field(EIST, "8")
    field(NIST, "9")
    field(TEST, "10")
    field(VAL, "$(ACTION=0)")
    field(FLNK, "$(P)Path$(N):$(K):get_wp_info.PROC")
}

# Enable/disable K'th waypoint in path N
record(bo, "$(P)Path$(N):$(K):Enabled") {
    field(DESC, "1 if waypoint in path enabled, else 0")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(VAL, 0)
    field(FLNK, "$(P)Path$(N):$(K):get_wp_info.PROC")
}

record(luascript, "$(P)Path$(N):$(K):get_wp_info") {
    field(CODE, "@paths.lua get_wp_info({prefix='$(P)',N=$(N),k=$(K)})")
    field(PINI, 1)
}

record(stringin, "$(P)Path$(N):$(K):Desc") {
    field(DESC, "Description of waypoint in path")
    field(INP, "$(P)Path$(N):$(K):get_wp_info.SVAL CP")
}

record(stringout, "$(P)Path$(N):$(K):ActionDesc") {
    field(DESC, "Description of action at point in path")
}

# INP link to Waypoint:Reached set by get_wp_info func
record(ai, "$(P)Path$(N):$(K):Reached") {
    field(DESC, "1 if robot at waypoint, else 0")
}

# INP link to Waypoint:Busy set by get_wp_info func
record(ai, "$(P)Path$(N):$(K):Busy") {
    field(DESC, "1 if busy moving to waypoint, else 0")
}

# NOTE: lua epics.put directly to ActionOpt PV throws mutex error,
# probably because of logic in waypoint databases, which is why we
# need to do the following
record(longout, "$(P)Path$(N):$(K):action_opt_val") {}

record(seq, "$(P)Path$(N):$(K):set_action_opt") {
    field(DOL0, "$(P)Path$(N):$(K):action_opt_val.VAL")
}
