dbLoadRecords("$(CALC)/db/userTransforms10more.db","P=$(PREFIX),N10=$(N)0,N1=$(N)1,N2=$(N)2,N3=$(N)3,N4=$(N)4,N5=$(N)5,N6=$(N)6,N7=$(N)7,N8=$(N)8,N9=$(N)9")
dbLoadRecords("$(CALC)/db/userAve10more.db","P=$(PREFIX),N10=$(N)0,N1=$(N)1,N2=$(N)2,N3=$(N)3,N4=$(N)4,N5=$(N)5,N6=$(N)6,N7=$(N)7,N8=$(N)8,N9=$(N)9")
# ### sseq.iocsh ###
#- ###################################################
#- PREFIX         - IOC Prefix
#- INSTANCE       - Instance Prefix
#- CALC           - Location of Calc module
#- ###################################################
#- string sequence (sseq) records
dbLoadRecords("$(CALC)/db/userStringSeqs10.db","P=$(PREFIX)")
#- editSseq - edit any sseq or seq record
dbLoadRecords("$(CALC)/db/editSseq.db", "P=$(PREFIX),Q=$(INSTANCE)")
doAfterIocInit("seq &editSseq, 'P=$(PREFIX),Q=$(INSTANCE)'")
#- interpolation
dbLoadRecords("$(CALC)/calcApp/Db/interp.db", "P=$(PREFIX),N=2000")
dbLoadRecords("$(CALC)/calcApp/Db/interpNew.db", "P=$(PREFIX),Q=1,N=2000")
#- busy record
dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
#- Soft function generator
#dbLoadRecords("$(CALC)/calcApp/Db/FuncGen.db","P=$(PREFIX),Q=fgen,OUT=$(PREFIX)m7.VAL")
### Load database record for alive heartbeating support.
#- IOCNM is name of IOC, RHOST specifies the remote server accepting hearbeats
dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),IOCNM=$(IOC),RHOST=164.54.100.11")
dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
#- A set of scan parameters for each positioner.  This is a convenience
#- for the user.  It can contain an entry for each scannable thing in the
#- crate.
#dbLoadTemplate("substitutions/scanParms.substitutions", "P=$(PREFIX)")
# Set up UR RTDE interface
# epicsEnvSet("ASYN_PORT1", "ur_asyn1")
# dbLoadRecords("$(TOP)/../../db/rtde_receive.db", "P=$(PREFIX), PORT=$(ASYN_PORT1), ADDR=0")
# URRobotRTDEConfig("$(ASYN_PORT1)", "164.54.104.148")
# Set up UR dashboard server
epicsEnvSet("ASYN_PORT2", "ur_asyn2")
dbLoadRecords("$(TOP)/../../db/dashboard.db", "P=$(PREFIX), PORT=$(ASYN_PORT2), ADDR=0")
URRobotDashboardConfig("$(ASYN_PORT2)", "164.54.104.148")
#- devIocStats
dbLoadRecords("$(DEVIOCSTATS)/db/iocAdminSoft.db","IOC=$(PREFIX)")
#- PV aliases change :: into :
dbLoadRecords("$(TOP)/ur63App/Db/iocAdminSoft_aliases.db","P=$(PREFIX)")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
dbcar(0,1)
# print the time our boot was finished
date
exit
